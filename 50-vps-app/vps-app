#!/bin/bash

# 环境变量
# APP_REPO app仓库地址

cleanup() {
  # 停止应用
  echo 'App stopping...'
  /home/app/app/scripts/app stop
}

start() {
  # 修改所有者，如果存在挂载目录需要在脚本中进行修改
  chown -Rf app:app /home/app

  # 注册清理函数
  trap cleanup SIGTERM

  # 启动组网和sshd服务
  echo "Vps tailscale server starting..."
  vps-tailscale-server start
  echo "Vps tailscale server started"

  # 必须在vps-tailscale-server完成初始化后运行
  # 此时ssh密钥已正确被设置
  if [ ! -d /home/app/app ]; then
    set -e
    # 设置GIT_SSH_COMMAND避免git clone过程中出现yes/no的ssh询问
    # export GIT_SSH_COMMAND="ssh -o \"StrictHostKeyChecking=no\""
    # clone app仓库
    if [ -n "$APP_BRANCH" ]; then
      echo "Git clone from $APP_REPO, branch $APP_BRANCH"
      git clone -b $APP_BRANCH $APP_REPO /home/app/app
    else
      echo "Git clone from $APP_REPO"
      git clone $APP_REPO /home/app/app
    fi
    echo 'Git clone done'
    # 构建app
    echo 'App building...'
    /home/app/app/scripts/app env
    /home/app/app/scripts/app build
    echo 'App build done'
    chown -Rf app:app /home/app/app
  fi

  echo 'App starting...'
  su app /bin/bash -c "/home/app/app/scripts/app start"
  app_pid=$(/home/app/app/scripts/app pid)
  echo "Wait app pid: $app_pid"
  while ps -p $app_pid > /dev/null 2>&1; do
    sleep 1
  done
  echo 'App stopped'

  # 停止组网和sshd服务
  echo 'Vps tailscale server stopping...'
  vps-tailscale-server stop
  echo 'Vps tailscale server stopped'
}

case "$1" in
  'start')
    start
    ;;
  *)
    echo "Usage: $0 {start}"
    ;;
esac
