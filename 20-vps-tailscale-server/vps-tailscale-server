#!/bin/bash

# 自动检测是否需要启用tailscale组网
enable_tailscale=true
if [ -z "$HEADSCALE_NS" ]; then
  enable_tailscale=false
fi
if [ -z "$HEADSCALE_SSH_HOST" ]; then
  enable_tailscale=false
fi
if [ -z "$HEADSCALE_LOGIN_SERVER" ]; then
  enable_tailscale=false
fi

start() {
  # 如果存在filebaet配置环境变量则启动filebeat
  if [ -n "$FILEBEAT_OPT" ]; then
    echo 'start filebeat'
    if [ -n "$FILEBEAT_USER" ]; then
      su $FILEBEAT_USER /bin/bash -c "filebeat $FILEBEAT_OPT" &
    else
      filebeat $FILEBEAT_OPT &
    fi
  fi

  # 启动vps-tailscale完成组网
  if $enable_tailscale; then
    echo 'start vps-tailscale'
    vps-tailscale start
  fi

  # sshd必须使用绝对路径运行
  echo 'start sshd'
  /usr/sbin/sshd
}

stop() {
  # 停止sshd
  echo "stop sshd"
  if [ -f /var/run/sshd.pid ]; then
    sshd_pid=$(cat /var/run/sshd.pid)
    kill $sshd_pid
    # 等待sshd停止
    while ps -p $sshd_pid > /dev/null 2>&1; do
      sleep 1
    done
  fi

  # 停止tailscale组网
  if $enable_tailscale; then
    echo "stop vps-tailscale"
    vps-tailscale stop
  fi

  # 如果存在filebeat配置环境变量则停止filebeat
  if [ -n "$FILEBEAT_OPT" ]; then
    filebeat_pid=$(ps -ef | grep filebeat | grep -v bash | grep -v grep | awk '{print $2}')
    if ps -p $filebeat_pid > /dev/null 2>&1; then
      echo 'stop filebeat'
      kill $filebeat_pid
    fi
    while ps -p $filebeat_pid > /dev/null 2>&1; do
      sleep 1
    done
  fi
}

case "$1" in
  'start')
    start
    ;;
  'stop')
    stop
    ;;
  *)
    echo "Usage: $0 {start|stop}"
    ;;
esac
