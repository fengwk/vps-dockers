input {
    # 测试时使用
    #stdin {
    #    codec => multiline {
    #        # 匹配日期开头的内容作为日志的开始
    #        pattern => "^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.+(TRACE|DEBUG|INFO|WARN|ERROR|FATAL).+$"
    #        # 如果不是日期开头的内容，就和上一行合并
    #        negate => true
    #        what => "previous"
    #    }
    #}

    beats {
        port => 5044
    }
}


filter {
    fingerprint {
        source => "message"
        target => "[@metadata][fingerprint]"
        method => "MD5"
    }

    grok {
        match => {
            "message" => "%{TIMESTAMP_ISO8601:@timestamp}\s*%{LOGLEVEL:level}\s*%{NUMBER:pid}\s*---\s*\[%{DATA:thread}\]\s*%{DATA:logger}\s*:\s*%{GREEDYDATA:content_all}"
        }
    }

    grok {
        match => {
            "content_all" => "((?<content>[\s\S]+)\n(?<trace>\{.+traceId.+spanId.+\}?)|(?<content>[\s\S]+))"
        }
    }


    if [trace] =~ /^{.*}$/ {
        json {
            source => "trace"
            target => "trace_json"
        }

        if [trace_json] {
            mutate {
                add_field => {
                    "traceId" => "%{[trace_json][traceId]}"
                    "spanId" => "%{[trace_json][spanId]}"
                }
            }
        }

        mutate {
            remove_field => ["trace_json"]
        }
    }

    mutate {
        #remove_field => [ "@version", "event", "tags", "message", "content_all", "trace" ]
        remove_field => [ "@version", "tags", "message", "content_all", "trace" ]
    }
}

output {
    stdout {
        codec => "rubydebug"
    }

    #elasticsearch {
    #    hosts => "http://vps-es:9200"
    #    index => "logstash-app-%{+YYYY.MM.dd}"
    #    document_id => "%{[@metadata][fingerprint]}"
    #}
}
